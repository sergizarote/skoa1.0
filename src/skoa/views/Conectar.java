/**                   
 * 
 GNU GENERAL PUBLIC LICENSE
                       Version 3, 29 June 2007

 Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>
 Everyone is permitted to copy and distribute verbatim copies
 of this license document, but changing it is not allowed.
 */
package skoa.views;

// Para poder usar @Action
import skoa.models.VariableGlobal;
import org.jdesktop.application.Action;
// Imports utilizados por "Dialog_Connect.java" de MCA
import tuwien.auto.eicl.*;
import tuwien.auto.eicl.struct.eibnetip.Description_Response;
import tuwien.auto.eicl.struct.eibnetip.util.HPAI;

import java.net.*;

import java.io.*;
import java.util.Calendar; // necesaria para la fecha y hora del d√≠a

/**
 *
 * @author  David
 */
public class Conectar extends javax.swing.JDialog {

    // Importados del fichero "Dialog_Connect.java" de MCA
    public static final long serialVersionUID = 1;
    
    // En "Dialog_Connect.java" no estaba inicializado, estaba en "Main_Frame.java"
    private Discoverer factory = new Discoverer();
    private String ficheroLOG;
    private String fechaHora;
    public CEMI_Connection tunnel;
    public String IP_Local = tuwien.auto.eicl.struct.eibnetip.util.HPAI.getLocalIP().getHostAddress(); // Direc. IP del pc;

  
    public Conectar(java.awt.Frame parent, String title, boolean modal, Discoverer _Factory, String _fecha_hora) {
        //super(parent, modal);
        super(parent, title, modal);

        fechaHora = getFechaHora();

        // Importados del fichero "Dialog_Connect.java" de MCA
        factory = _Factory;
        fechaHora = _fecha_hora;

        try { // El try, importado tb
            //initComponents();
            initComponents_mio();
        } catch (Exception ex) {
            SkoaMain.showException(ex.getMessage());
        }
    }

    // Importado
 
            
    /**
     * Emtodo que proporciona una String con la fecha y hora actual
     * @return la fecha
     */        
    private String getFechaHora() {
        Calendar calendario = Calendar.getInstance();
        String _fecha_hora = calendario.getInstance().getTime().toString();
        return _fecha_hora;
    }

    /**
     * Metodo para cerrar la ventana al pulsar en "Cancelar"
     */
    @Action
    public void cerrarConectar() {
        setVisible(false);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTFDirIPKnx = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFPuerto = new javax.swing.JTextField();
        jTFDirIPLocal = new javax.swing.JTextField();
        jTFLog = new javax.swing.JTextField();
        jBDescripcion = new javax.swing.JButton();
        jBConectar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(skoa.views.SkoaApp.class).getContext().getResourceMap(Conectar.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTFDirIPKnx.setText(resourceMap.getString("jTFDirIPKnx.text")); // NOI18N
        jTFDirIPKnx.setText(tuwien.auto.eicldemo.ui.Main_Frame.IPknx_MCA_cnf);
        jTFDirIPKnx.setToolTipText(resourceMap.getString("jTFDirIPKnx.toolTipText")); // NOI18N
        jTFDirIPKnx.setName("jTFDirIPKnx"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jTFPuerto.setText(resourceMap.getString("jTFPuerto.text")); // NOI18N
        jTFPuerto.setName("jTFPuerto"); // NOI18N

        jTFDirIPLocal.setText(resourceMap.getString("jTFDirIPLocal.text")); // NOI18N
        jTFDirIPLocal.setText(IP_Local); // Direc. IP del pc
        jTFDirIPLocal.setName("jTFDirIPLocal"); // NOI18N

        jTFLog.setText(resourceMap.getString("jTFLog.text")); // NOI18N
        jTFLog.setText(tuwien.auto.eicldemo.ui.Main_Frame.Flog_MCA_cnf);
        jTFLog.setToolTipText(resourceMap.getString("jTFLog.toolTipText")); // NOI18N
        jTFLog.setName("jTFLog"); // NOI18N

        jBDescripcion.setFont(resourceMap.getFont("jBDescripcion.font")); // NOI18N
        jBDescripcion.setText(resourceMap.getString("jBDescripcion.text")); // NOI18N
        jBDescripcion.setName("jBDescripcion"); // NOI18N
        jBDescripcion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDescripcionActionPerformed(evt);
            }
        });

        jBConectar.setFont(resourceMap.getFont("jBConectar.font")); // NOI18N
        jBConectar.setText(resourceMap.getString("jBConectar.text")); // NOI18N
        jBConectar.setName("jBConectar"); // NOI18N
        jBConectar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConectarActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(skoa.views.SkoaApp.class).getContext().getActionMap(Conectar.class, this);
        jButton3.setAction(actionMap.get("cerrarConectar")); // NOI18N
        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jBConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE)
                        .addGap(29, 29, 29)
                        .addComponent(jBDescripcion))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(24, 24, 24)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jTFDirIPKnx, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFPuerto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE)
                            .addComponent(jTFLog, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTFDirIPLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE))))
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jTFDirIPKnx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTFPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTFDirIPLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTFLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(40, 40, 40)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBConectar)
                    .addComponent(jBDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void jBConectarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConectarActionPerformed

    // Reiniciamos la variable para saber que no estamos desconectado del bus EIB
    VariableGlobal.desconexion = 0;

    try {
        HPAI.setLocalIP(InetAddress.getByName(IP_Local));

        // Obtenemos la ruta del fichero LOG
        ficheroLOG = jTFLog.getText();
        PrintWriter writer = new PrintWriter(ficheroLOG);
        // Escribimos en el fichero log un mensaje inicial
        writer.print(fechaHora + ": Se ha creado el fichero LOG correctamente \n");
        writer.flush();

        if (jTFPuerto.isEditable()) {
            InetSocketAddress isa = new InetSocketAddress(jTFDirIPKnx.getText(),
                    Integer.valueOf(jTFPuerto.getText()).intValue());
            tunnel = new CEMI_Connection(isa, new TunnellingConnectionType());
        } else {
            tunnel = new CEMI_Connection(
                    factory.getSearchResponses()[0],
                    new TunnellingConnectionType());
        }

        // En caso de que haya podido realizarse la conexi√≥n
        if (tunnel != null) {
            // Informamos de ello en el fichero Log
            writer.print(fechaHora + ": Usuario conectado \n");
            // Y tambi√©n en el log de la aplicaci√≥n
            synchronized (SkoaMain.textArea) {
                SkoaMain.textArea.append(fechaHora + ": Usuario conectado \n");
            }
            writer.flush();
            // Cambiamos el estado del servidor en la interfaz principal
            SkoaMain.jlEstadoServ_res.setText("Conectado");
        }
        writer.close();
        this.dispose();
    } catch (Exception ex) {
        SkoaMain.showException(ex.getMessage());
        synchronized (SkoaMain.textArea) {
            SkoaMain.textArea.append(fechaHora + ": " + ex.getMessage() + "\n");
        }
        SkoaMain.escribeMensajeLog(ficheroLOG, fechaHora + ": " + ex.getMessage() + "\n");
    }
}//GEN-LAST:event_jBConectarActionPerformed

private void jBDescripcionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBDescripcionActionPerformed

    InetSocketAddress isa = null;
    try {
        HPAI.setLocalIP(InetAddress.getByName(IP_Local));

        if (jTFPuerto.isEditable()) {
            isa = new InetSocketAddress(jTFDirIPKnx.getText(), Integer.valueOf(
                    jTFPuerto.getText()).intValue());
        } else {
            isa = factory.getSearchResponses()[0];
        }
        try {
            Description_Response response = factory.getDescription(isa, 3);
            synchronized (SkoaMain.textArea) {
                SkoaMain.textArea.append("Respuesta a la solicitud de descripci√≥n recibida desde " + isa + "\n");
                SkoaMain.textArea.setCaretPosition(SkoaMain.textArea.getText().length());
                SkoaMain.textArea.append(response.getDevice().getName() + "\n");
                SkoaMain.textArea.setCaretPosition(SkoaMain.textArea.getText().length());
                SkoaMain.textArea.append("Admite: ");
                for (java.util.Enumeration sf = response.getSupportedFamilies().getSupportedFamilies(); sf.hasMoreElements();) {
                    switch (((Integer) sf.nextElement()).intValue()) {
                        case 2:
                            SkoaMain.textArea.append("Core ");
                            break;
                        case 3:
                            SkoaMain.textArea.append("DeviceMgmt ");
                            break;
                        case 4:
                            SkoaMain.textArea.append("Tunnelling ");
                            break;
                        case 5:
                            SkoaMain.textArea.append("Routing ");
                            break;
                    }
                }
                SkoaMain.textArea.append("\n");
                SkoaMain.textArea.setCaretPosition(SkoaMain.textArea.getText().length());
                SkoaMain.textArea.append("Direcci√≥n EIB "
                        + response.getDevice().getEibaddress().toString() + "\n\n");
                SkoaMain.textArea.setCaretPosition(SkoaMain.textArea.getText().length());
            }
        } catch (Exception ex) {
            SkoaMain.showException(ex.getMessage());
        }
    } catch (UnknownHostException ex) {
        SkoaMain.showException(ex.getMessage());

    }
}//GEN-LAST:event_jBDescripcionActionPerformed

    private void initComponents_mio() {

        jLabel1 = new javax.swing.JLabel();
        jTFDirIPKnx = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTFPuerto = new javax.swing.JTextField();
        jTFDirIPLocal = new javax.swing.JTextField();
        jTFLog = new javax.swing.JTextField();
        jBDescripcion = new javax.swing.JButton();
        jBConectar = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(skoa.views.SkoaApp.class).getContext().getResourceMap(Conectar.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        setResizable(false);

        jLabel1.setFont(resourceMap.getFont("jLabel1.font")); // NOI18N
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jTFDirIPKnx.setText(resourceMap.getString("jTFDirIPKnx.text")); // NOI18N
        // De momento no funciona, parece ser k la variable tiene valor null
        // Funcionar√≠a si se pusiera directamente el contenido de la asignaci√≥n de dicha variable
        jTFDirIPKnx.setText(SkoaMain.IPknx_MCA_cnf);
        jTFDirIPKnx.setToolTipText(resourceMap.getString("jTFDirIPKnx.toolTipText")); // NOI18N
        jTFDirIPKnx.setName("jTFDirIPKnx"); // NOI18N

        jLabel2.setFont(resourceMap.getFont("jLabel2.font")); // NOI18N
        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setFont(resourceMap.getFont("jLabel3.font")); // NOI18N
        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setFont(resourceMap.getFont("jLabel4.font")); // NOI18N
        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jTFPuerto.setText(resourceMap.getString("jTFPuerto.text")); // NOI18N
        jTFPuerto.setName("jTFPuerto"); // NOI18N

        // jTFDirIPLocal.setText(resourceMap.getString("jTFDirIPLocal.text")); // NOI18N
        jTFDirIPLocal.setText(IP_Local); // Direc. IP del pc
        jTFDirIPLocal.setName("jTFDirIPLocal"); // NOI18N

        jTFLog.setText(resourceMap.getString("jTFLog.text")); // NOI18N
        jTFLog.setText(SkoaMain.Flog_MCA_cnf);
        jTFLog.setToolTipText(resourceMap.getString("jTFLog.toolTipText")); // NOI18N
        jTFLog.setName("jTFLog"); // NOI18N

        jBDescripcion.setFont(resourceMap.getFont("jBDescripcion.font")); // NOI18N
        jBDescripcion.setText(resourceMap.getString("jBDescripcion.text")); // NOI18N
        jBDescripcion.setName("jBDescripcion"); // NOI18N
        jBDescripcion.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBDescripcionActionPerformed(evt);
            }
        });

        jBConectar.setFont(resourceMap.getFont("jBConectar.font")); // NOI18N
        jBConectar.setText(resourceMap.getString("jBConectar.text")); // NOI18N
        jBConectar.setName("jBConectar"); // NOI18N
        jBConectar.addActionListener(new java.awt.event.ActionListener() {

            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConectarActionPerformed(evt);
            }
        });

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(skoa.views.SkoaApp.class).getContext().getActionMap(Conectar.class, this);
        jButton3.setAction(actionMap.get("cerrarConectar")); // NOI18N
        jButton3.setFont(resourceMap.getFont("jButton3.font")); // NOI18N
        jButton3.setName("jButton3"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addContainerGap().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jButton3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 283, Short.MAX_VALUE).addGroup(layout.createSequentialGroup().addComponent(jBConectar, javax.swing.GroupLayout.DEFAULT_SIZE, 117, Short.MAX_VALUE).addGap(29, 29, 29).addComponent(jBDescripcion)).addGroup(layout.createSequentialGroup().addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(jLabel1).addComponent(jLabel2).addComponent(jLabel3).addComponent(jLabel4)).addGap(24, 24, 24).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false).addComponent(jTFDirIPKnx, javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTFPuerto, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 144, Short.MAX_VALUE).addComponent(jTFLog, javax.swing.GroupLayout.Alignment.LEADING).addComponent(jTFDirIPLocal, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)))).addGap(37, 37, 37)));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addGroup(layout.createSequentialGroup().addGap(21, 21, 21).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel1).addComponent(jTFDirIPKnx, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel2).addComponent(jTFPuerto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel3).addComponent(jTFDirIPLocal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(18, 18, 18).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jLabel4).addComponent(jTFLog, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(40, 40, 40).addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE).addComponent(jBConectar).addComponent(jBDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)).addGap(26, 26, 26).addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE).addContainerGap(32, Short.MAX_VALUE)));

        pack();
    }

    // Importado de "Dialog_Connect.java"
    public String getLOG() {
        return ficheroLOG;
    }

    /**
     * @param args the command line arguments
     */
    public void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                Conectar dialog = new Conectar(new javax.swing.JFrame(), "Conectado a",
                        true, factory, fechaHora);
                //Conectar dialog = new Conectar(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {

                    public void windowClosing(java.awt.event.WindowEvent e) {
//                        System.out.println("quiero salir en conectar.java");
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBConectar;
    private javax.swing.JButton jBDescripcion;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JTextField jTFDirIPKnx;
    public javax.swing.JTextField jTFDirIPLocal;
    public javax.swing.JTextField jTFLog;
    private javax.swing.JTextField jTFPuerto;
    // End of variables declaration//GEN-END:variables
}
